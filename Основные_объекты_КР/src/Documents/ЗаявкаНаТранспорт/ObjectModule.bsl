
Процедура ОбработкаЗаполнения(Основание)
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.РасходнаяНакладная") Тогда
		// Проверка: не введено ли уже какой-нибудь заявки
		//           на основании этой расходной накладной
		
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	Ссылка КАК ОформленнаяЗаявка
		|ИЗ
		|	Документ.ЗаявкаНаТранспорт
		|ГДЕ
		|	ДокументОснование = &ТекущийДокументОснование
		|";
		
		Запрос.УстановитьПараметр("ТекущийДокументОснование", Основание);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() = Истина Тогда
			
			ОформленнаяЗаявка = РезультатЗапроса.Выгрузить().Получить(0).ОформленнаяЗаявка;
			
			Сообщить("На основании '" + Основание + "' уже оформлена заявка:" + Символы.ПС +
					 "   - '" + ОформленнаяЗаявка + "'");
			
		Иначе
			
			ДокументОснование = Основание;
			
			Покупатель = Основание.Контрагент;
			КонтактноеЛицо = Основание.КонтактноеЛицо;
			ТекущийЭтапДоставки = Перечисления.ЭтапыДоставки.ДоставкаНеНачата;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(Ссылка) = Ложь Тогда
		// Проверка заполнения данных менеджера
		
		ПроверяемыеРеквизиты.Добавить("Покупатель");
		ПроверяемыеРеквизиты.Добавить("КонтактноеЛицо");
	
	Иначе
		// Проверка заполнения данных сотрудника транспортного отдела
	
		ПроверяемыеРеквизиты.Добавить("Машина");
		ПроверяемыеРеквизиты.Добавить("Водитель");
		ПроверяемыеРеквизиты.Добавить("ПервыйГрузчик");
		ПроверяемыеРеквизиты.Добавить("ВторойГрузчик");
		ПроверяемыеРеквизиты.Добавить("ТекущийЭтапДоставки");
		ПроверяемыеРеквизиты.Добавить("Километраж");
	
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	Если ТекущийЭтапДоставки = Перечисления.ЭтапыДоставки.ДоставкаНеНачата Тогда
		
		Запрос = Новый Запрос;
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	Регистратор КАК ПредыдущаяЗаявка,
		|	ЭтапДоставки КАК ЭтапДоставкиВПредыдущейЗаявке
		|ИЗ
		|	РегистрСведений.МестоположенияБригад.СрезПоследних(&МоментВремени, Машина = &ВыбраннаяМашина)
		|";

		Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
		Запрос.УстановитьПараметр("ВыбраннаяМашина", Машина);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() = Ложь Тогда
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			ВыборкаДетальныеЗаписи.Следующий();
			
			Если ВыборкаДетальныеЗаписи.ЭтапДоставкиВПредыдущейЗаявке <> Перечисления.ЭтапыДоставки.ДоставкаВыполнена Тогда
				
				Сообщить("Предыдущая доставка на машине '" + Машина + "' еще не завершена:" + Символы.ПС +
						 "   - Документ: '" + ВыборкаДетальныеЗаписи.ПредыдущаяЗаявка + "':" + Символы.ПС +
						 "      - Этап доставки: " + ВыборкаДетальныеЗаписи.ЭтапДоставкиВПредыдущейЗаявке);
				Отказ = Истина;
				Возврат;
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Формирование записей в регистре сведений 'МестоположенияБригад'
	Движение = Движения.МестоположенияБригад.Добавить();
	Движение.Период = Дата;
	
	Движение.Машина = Машина;
	Движение.ЭтапДоставки = ТекущийЭтапДоставки;
	
КонецПроцедуры

