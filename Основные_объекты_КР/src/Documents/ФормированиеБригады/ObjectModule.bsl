
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроверитьЗаполнениеРеквизитов(Отказ);
	
	Если Не Отказ Тогда
		ПроверитьЗанятостьЧленовБригады(Отказ);
	КонецЕсли;
	
	Если Не Отказ Тогда
		ПроверитьЗначениеСчетчика(Отказ);
	КонецЕсли;
	
	Если Не Отказ Тогда
		ЗаполнитьНаборЗаписей_СформированныеБригады();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеРеквизитов(Отказ)
	

	Если Водитель.Пустая() ИЛИ ПервыйГрузчик.Пустая() ИЛИ ВторойГрузчик.Пустая() ИЛИ
		 Машина.Пустая() ИЛИ НачальноеЗначениеСчетчика <= 0 ИЛИ
		 НЕ ВодительДопущенВрачомКРейсам ИЛИ
		 НЕ БригадаПрошлаИнструктажПоТБ Тогда
			Сообщить("Проверьте правильность заполнения реквизитов документа.");
			Отказ = Истина;
			Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗанятостьЧленовБригады(Отказ)
 	// Проверка: не занят ли кто-нибудь из бригады или машина
	//           в одной из сегодняшних бригад?
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Регистратор,
	|	Машина,
	|	Водитель,
	|	ПервыйГрузчик,
	|	ВторойГрузчик
	|ИЗ
	|	РегистрСведений.СформированныеБригады
	|ГДЕ
	|	(Период = &НачалоДняДатыДокумента) И
	|	(Машина = &МашинаВДокументе ИЛИ
	|	 Водитель = &ВодительВДокументе ИЛИ
	|	 ПервыйГрузчик В (&ПервыйГрузчикВДокументе, &ВторойГрузчикВДокументе) ИЛИ
	|	 ВторойГрузчик В (&ПервыйГрузчикВДокументе, &ВторойГрузчикВДокументе))
	|";
	Запрос.УстановитьПараметр("НачалоДняДатыДокумента", НачалоДня(Дата));
	Запрос.УстановитьПараметр("МашинаВДокументе", Машина);
	Запрос.УстановитьПараметр("ВодительВДокументе", Водитель);
	Запрос.УстановитьПараметр("ПервыйГрузчикВДокументе", ПервыйГрузчик);
	Запрос.УстановитьПараметр("ВторойГрузчикВДокументе", ВторойГрузчик);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Выбранные сотрудники или машина уже заняты на " + Формат(Дата, "ДЛФ=DD")+ Символы.ПС +
		"   - Документ, мешающий проведению: " + Выборка.Регистратор + Символы.ПС +
		"       - Машина: " + Выборка.Машина + Символы.ПС +
		"       - Водитель: " + Выборка.Водитель + Символы.ПС +
		"       - Первый грузчик: " + Выборка.ПервыйГрузчик + Символы.ПС +
		"       - Второй грузчик: " + Выборка.ВторойГрузчик + Символы.ПС;
		Сообщение.Сообщить();
		
		Отказ = Истина;
	КонецЕсли;

	

КонецПроцедуры

Процедура ПроверитьЗначениеСчетчика(Отказ)

	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Регистратор,
	|	НачальноеЗначениеСчетчика
	|ИЗ
	|	РегистрСведений.СформированныеБригады.СрезПоследних(&ДатаДокумента, Машина = &Машина)
	|";
	
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.УстановитьПараметр("Машина", Машина);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		ПредыдущееНачальноеЗначениеСчетчика = Выборка.НачальноеЗначениеСчетчика;
		
		Если НачальноеЗначениеСчетчика < ПредыдущееНачальноеЗначениеСчетчика Тогда
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Начальное значение счетчика меньше предыдущего:" + Символы.ПС + 
					 "   - в текущем документе: " + Формат(НачальноеЗначениеСчетчика, "ЧДЦ=2") + " км." + Символы.ПС +
					 "   - в документе '" + Выборка.Регистратор + "': " +
					 Формат(ПредыдущееНачальноеЗначениеСчетчика, "ЧДЦ=2") + " км.";
			Сообщение.Сообщить();
			
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьНаборЗаписей_СформированныеБригады()
	
    Движения.СформированныеБригады.Записывать = Истина;
	
	Движение = Движения.СформированныеБригады.Добавить();
	
	Движение.Период = Дата;
	
	Движение.Машина = Машина;
	
	Движение.Водитель = Водитель;
	Движение.ПервыйГрузчик = ПервыйГрузчик;
	Движение.ВторойГрузчик = ВторойГрузчик;
	Движение.НачальноеЗначениеСчетчика = НачальноеЗначениеСчетчика;

КонецПроцедуры // ЗаполнитьНаборЗаписей_СформированныеБригады()


