&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)

	СтруктураДанныхТекущейСтроки = Элементы.Товары.ТекущиеДанные;

	ПересчетСуммыСтроки(СтруктураДанныхТекущейСтроки);

КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)

	СтруктураДанныхТекущейСтроки = Элементы.Товары.ТекущиеДанные;

	ПересчетСуммыСтроки(СтруктураДанныхТекущейСтроки);


КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаПриИзменении(Элемент)

	СтруктураДанныхТекущейСтроки = Элементы.Товары.ТекущиеДанные;

	Если СтруктураДанныхТекущейСтроки.Количество <> 0 Тогда

		СтруктураДанныхТекущейСтроки.Цена = СтруктураДанныхТекущейСтроки.Сумма / СтруктураДанныхТекущейСтроки.Количество;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)

	СтруктураДанныхТекущейСтроки = Элементы.Услуги.ТекущиеДанные;

	ПересчетСуммыСтроки(СтруктураДанныхТекущейСтроки);


КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)

	СтруктураДанныхТекущейСтроки = Элементы.Услуги.ТекущиеДанные;

	ПересчетСуммыСтроки(СтруктураДанныхТекущейСтроки);


КонецПроцедуры

&НаКлиенте
Процедура УслугиСуммаПриИзменении(Элемент)

	СтруктураДанныхТекущейСтроки = Элементы.Услуги.ТекущиеДанные;

	Если СтруктураДанныхТекущейСтроки.Количество <> 0 Тогда

		СтруктураДанныхТекущейСтроки.Цена = СтруктураДанныхТекущейСтроки.Сумма / СтруктураДанныхТекущейСтроки.Количество;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	ПересчетСуммыДокумента();


КонецПроцедуры


&НаКлиенте
Процедура ТоварыПослеУдаления(Элемент)

	ПересчетСуммыДокумента();


КонецПроцедуры

&НаКлиенте
Процедура УслугиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	ПересчетСуммыДокумента();


КонецПроцедуры

&НаКлиенте
Процедура УслугиПослеУдаления(Элемент)

	ПересчетСуммыДокумента();


КонецПроцедуры

&НаКлиенте
Процедура ПересчетСуммыДокумента()

	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");

КонецПроцедуры



&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)

	СтруктураДанныхТекущейСтроки = Элементы.Товары.ТекущиеДанные;

	ТоварыНоменклатураПриИзмененииНаСервере(СтруктураДанныхТекущейСтроки.Номенклатура,
		СтруктураДанныхТекущейСтроки.ЕдиницаИзмерения);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТоварыНоменклатураПриИзмененииНаСервере(СсылкаНаНоменклатуру, СсылкаНаЕдиницуИзмерения)
	
//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
// Данный фрагмент построен конструктором.
// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!

	Запрос = Новый Запрос;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номенклатура.ОсновнаяЕдиницаИзмерения
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка", СсылкаНаНоменклатуру);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	ВыборкаДетальныеЗаписи.Следующий();

	СсылкаНаЕдиницуИзмерения = ВыборкаДетальныеЗаписи.ОсновнаяЕдиницаИзмерения;

КонецПроцедуры

&НаКлиенте
Процедура ПересчетСуммыСтроки(СтрокаТаблицы)

	СтрокаТаблицы.Сумма = СтрокаТаблицы.Количество * СтрокаТаблицы.Цена;

КонецПроцедуры